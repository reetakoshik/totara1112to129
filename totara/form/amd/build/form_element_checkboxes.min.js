define(["jquery","totara_form/form"],function(a,b){function c(a,d,e,f){return this instanceof c?(b.Element.apply(this,arguments),this.container=null,void(this.inputs=null)):new c(a,d,e,f)}var d="totara_form-error-container",e="."+d;return c.prototype=Object.create(b.Element.prototype),c.prototype.constructor=c,c.prototype.toString=function(){return"[object CheckboxesElement]"},c.prototype.init=function(b){var c=a("#"+this.id+" input[type=checkbox]"),d=a(c[0]);if(this.container=a("#"+this.id),this.inputs=c,this.inputs.change(a.proxy(this.changed,this)),this.container.data("required")){var e='input[type="submit"]:not([formnovalidate])',f=this;c.each(function(){a(this).on("change",a.proxy(f.polyFillValidate,f))}),d.closest("form").find(e).click(a.proxy(this.polyFillValidate,this))}b()},c.prototype.getValue=function(){for(var b=[],c=0;c<this.inputs.length;c++){var d=a(this.inputs[c]);d.is(":checked")&&b.push(d.val())}return 0!==b.length&&b},c.prototype.polyFillValidate=function(b){var c=!1,d=this.container;this.inputs.each(function(b,d){a(d).prop("checked")&&(c=!0)}),c?(this.validationerroradded=!1,d.closest(".tf_element").find(e).remove()):(b.preventDefault(),this.validationerroradded||(this.validationerroradded=!0,require(["core/templates","core/str","core/config"],function(a,b,c){b.get_string("required","core").done(function(b){var e={errors_has_items:!0,errors:[{message:b}]};a.render("totara_form/validation_errors",e,c.theme).done(function(a){d.prepend(a)})})})))},c});